{"version":3,"sources":["Waveform.js","Tracks.js","App.js","reportWebVitals.js","index.js"],"names":["Waveform","url","tracks","selectedTrack","setSelectedTrack","wavesurfer","useRef","useState","volume","setVolume","useEffect","current","WaveSurfer","create","container","waveColor","progressColor","barWidth","barRadius","barGap","responsive","height","normalize","partialRender","showTime","plugins","CursorPlugin","opacity","customShowTimeStyle","color","padding","TimelinePlugin","load","on","destroy","play","playPause","id","className","onClick","type","name","min","max","step","onChange","e","newVolume","target","value","defaultValue","map","track","misician","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAmHeA,EA7GE,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,IAAKC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBACxCC,EAAaC,iBAAO,MAD2C,EAEzCC,mBAAS,IAFgC,mBAE9DC,EAF8D,KAEtDC,EAFsD,KAIrEC,qBAAU,WAwCR,OAvCAL,EAAWM,QAAUC,IAAWC,OAAO,CACrCC,UAAW,YACXC,UAAW,OACXC,cAAe,UACfC,SAAU,EACVC,UAAW,EACXC,OAAQ,EACRC,YAAY,EACZC,OAAQ,IACRC,WAAW,EACXC,eAAe,EACfC,UAAU,EACVC,QAAS,CACPC,IAAab,OAAO,CAClBC,UAAW,YACXU,UAAU,EACVG,QAAS,EACTC,oBAAqB,CACnB,mBAAoB,qBACpBC,MAAO,OACPC,QAAS,OACT,YAAa,OACbT,OAAQ,UAGZU,IAAelB,OAAO,CACpBC,UAAW,iBAKjBT,EAAWM,QAAQqB,KAAK/B,GAExBI,EAAWM,QAAQsB,GAAG,SAAS,WACzB5B,EAAWM,UACbN,EAAWM,QAAQF,UAAUD,GAC7BC,EAAUD,OAGP,kBAAMH,EAAWM,QAAQuB,aAC/B,CAACjC,IAEJ,IAAMkC,EAAO,WACX9B,EAAWM,QAAQyB,aAarB,OACE,sBAAKC,GAAG,OAAR,UACE,qBAAKA,GAAG,aACR,qBAAKA,GAAG,aACR,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,eAAf,UACE,wBAAQC,QAASJ,IAEjB,uBACEK,KAAK,QACLH,GAAG,SACHI,KAAK,SACLC,IAAI,OACJC,IAAI,IACJC,KAAK,OACLC,SAzBa,SAACC,GAAO,IAEvBC,GADaD,EAAXE,OACkBC,MAEtBF,IACFtC,EAAUsC,GACV1C,EAAWM,QAAQF,UAAUsC,GAAa,KAoBpCG,aAAc1C,SAKpB,sBAAK8B,UAAU,WAAf,UACE,0CACA,qBAAKA,UAAU,QAAf,SACGpC,EAAOiD,KAAI,SAACC,GAAD,OACV,sBAEEd,UACEc,EAAMf,KAAOlC,EAAckC,GACvB,wBACA,gBAENE,QAAS,WACPnC,EAAiBgD,GACjBjB,KATJ,UAYE,+BAAOiB,EAAMC,WACb,sCACA,+BAAOD,EAAME,UAbRF,EAAMf,gBC9DVnC,EA/BA,CACb,CACEmC,GAAI,EACJgB,SAAU,YACVC,MAAO,eACPrD,IACE,kFAEJ,CACEoC,GAAI,EACJgB,SAAU,SACVC,MAAO,QACPrD,IACE,kFAEJ,CACEoC,GAAI,EACJgB,SAAU,0DACVC,MAAO,gBACPrD,IACE,kFAEJ,CACEoC,GAAI,EACJgB,SAAU,sBACVC,MAAO,4BACPrD,IACE,mFCPSsD,EAfH,WAAO,IAAD,EAC0BhD,mBAASL,EAAO,IAD1C,mBACTC,EADS,KACMC,EADN,KAGhB,OACE,qBAAKkC,UAAU,MAAf,SACE,cAAC,EAAD,CACErC,IAAKE,EAAcF,IACnBC,OAAQA,EACRC,cAAeA,EACfC,iBAAkBA,OCFXoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0b3a9bd7.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport WaveSurfer from \"wavesurfer.js\";\r\nimport CursorPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.cursor.min.js\";\r\nimport TimelinePlugin from \"wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js\";\r\n\r\nconst Waveform = ({ url, tracks, selectedTrack, setSelectedTrack }) => {\r\n  const wavesurfer = useRef(null);\r\n  const [volume, setVolume] = useState(0.5);\r\n\r\n  useEffect(() => {\r\n    wavesurfer.current = WaveSurfer.create({\r\n      container: \"#waveform\",\r\n      waveColor: \"#eee\",\r\n      progressColor: \"#8291A9\",\r\n      barWidth: 4,\r\n      barRadius: 1,\r\n      barGap: 2,\r\n      responsive: true,\r\n      height: 100,\r\n      normalize: true,\r\n      partialRender: true,\r\n      showTime: true,\r\n      plugins: [\r\n        CursorPlugin.create({\r\n          container: \"#waveform\",\r\n          showTime: true,\r\n          opacity: 1,\r\n          customShowTimeStyle: {\r\n            \"background-color\": \"rgba(0, 0, 0, 0.7)\",\r\n            color: \"#fff\",\r\n            padding: \"10px\",\r\n            \"font-size\": \"18px\",\r\n            height: \"25px\",\r\n          },\r\n        }),\r\n        TimelinePlugin.create({\r\n          container: \"#timeline\",\r\n        }),\r\n      ],\r\n    });\r\n\r\n    wavesurfer.current.load(url);\r\n\r\n    wavesurfer.current.on(\"ready\", function () {\r\n      if (wavesurfer.current) {\r\n        wavesurfer.current.setVolume(volume);\r\n        setVolume(volume);\r\n      }\r\n    });\r\n    return () => wavesurfer.current.destroy();\r\n  }, [url]);\r\n\r\n  const play = () => {\r\n    wavesurfer.current.playPause();\r\n  };\r\n\r\n  const onVolumeChange = (e) => {\r\n    const { target } = e;\r\n    const newVolume = +target.value;\r\n\r\n    if (newVolume) {\r\n      setVolume(newVolume);\r\n      wavesurfer.current.setVolume(newVolume || 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"wave\">\r\n      <div id=\"waveform\" />\r\n      <div id=\"timeline\" />\r\n      <div className=\"controls\">\r\n        <div className=\"ControlsBody\">\r\n          <button onClick={play}>\r\n          </button>\r\n          <input\r\n            type=\"range\"\r\n            id=\"volume\"\r\n            name=\"volume\"\r\n            min=\"0.01\"\r\n            max=\"1\"\r\n            step=\".025\"\r\n            onChange={onVolumeChange}\r\n            defaultValue={volume}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"playlist\">\r\n        <p>Playlist:</p>\r\n        <div className=\"songs\">\r\n          {tracks.map((track) => (\r\n            <div\r\n              key={track.id}\r\n              className={\r\n                track.id === selectedTrack.id\r\n                  ? \"playlist-itemSelected\"\r\n                  : \"playlist-item\"\r\n              }\r\n              onClick={() => {\r\n                setSelectedTrack(track);\r\n                play(track);\r\n              }}\r\n            >\r\n              <span>{track.misician}</span>\r\n              <span>- </span>\r\n              <span>{track.title}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Waveform;\r\n","const tracks = [\r\n  {\r\n    id: 0,\r\n    misician: \"Kunteynir\",\r\n    title: \"Privet pider\",\r\n    url:\r\n      \"https://res.cloudinary.com/qpheliax/video/upload/v1609094194/mp3/01_t040fc.mp3\",\r\n  },\r\n  {\r\n    id: 1,\r\n    misician: \"MØL\",\r\n    title: \"Bruma\",\r\n    url:\r\n      \"https://res.cloudinary.com/qpheliax/video/upload/v1609094195/mp3/02_imf5hp.mp3\",\r\n  },\r\n  {\r\n    id: 3,\r\n    misician: \"СЛАВА КПСС\",\r\n    title: \"TOYOTA CRESTA\",\r\n    url:\r\n      \"https://res.cloudinary.com/qpheliax/video/upload/v1609094194/mp3/03_eccypd.mp3\",\r\n  },\r\n  {\r\n    id: 4,\r\n    misician: \"Mourning By Morning\",\r\n    title: \"I Let You Go For Nihilism\",\r\n    url:\r\n      \"https://res.cloudinary.com/qpheliax/video/upload/v1609094195/mp3/04_tafkbp.mp3\",\r\n  },\r\n];\r\n\r\nexport default tracks;\r\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Wave from \"./Waveform\";\nimport tracks from \"./Tracks\";\n\nconst App = () => {\n  const [selectedTrack, setSelectedTrack] = useState(tracks[0]);\n\n  return (\n    <div className=\"App\">\n      <Wave\n        url={selectedTrack.url}\n        tracks={tracks}\n        selectedTrack={selectedTrack}\n        setSelectedTrack={setSelectedTrack}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}