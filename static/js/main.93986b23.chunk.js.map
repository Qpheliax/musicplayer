{"version":3,"sources":["Waveform.js","Playlist.js","App.js","reportWebVitals.js","index.js"],"names":["Waveform","url","waveformRef","useRef","wavesurfer","useState","playing","setPlay","volume","setVolume","useEffect","options","container","current","waveColor","progressColor","barWidth","barRadius","barGap","responsive","height","normalize","partialRender","showTime","WaveSurfer","create","load","on","destroy","id","ref","className","onClick","playPause","type","name","min","max","step","onChange","e","newVolume","target","value","defaultValue","PlayList","tracks","selectedTrack","setSelectedTrack","map","track","misician","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAgFeA,EA/DE,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACZC,EAAcC,iBAAO,MACrBC,EAAaD,iBAAO,MAFE,EAGDE,oBAAS,GAHR,mBAGrBC,EAHqB,KAGZC,EAHY,OAIAF,mBAAS,IAJT,mBAIrBG,EAJqB,KAIbC,EAJa,KAM5BC,qBAAU,WACRH,GAAQ,GAER,IAAMI,EAvB8B,CACtCC,UAsBwCV,EAAYW,QArBpDC,UAAW,OACXC,cAAe,UACfC,SAAU,EACVC,UAAW,EACXC,OAAQ,EACRC,YAAY,EACZC,OAAQ,IACRC,WAAW,EACXC,eAAe,EACfC,UAAU,GAwBR,OAXAnB,EAAWS,QAAUW,IAAWC,OAAOd,GAEvCP,EAAWS,QAAQa,KAAKzB,GAExBG,EAAWS,QAAQc,GAAG,SAAS,WACzBvB,EAAWS,UACbT,EAAWS,QAAQJ,UAAUD,GAC7BC,EAAUD,OAIP,kBAAMJ,EAAWS,QAAQe,aAC/B,CAAC3B,IAiBJ,OACE,gCACE,qBAAK4B,GAAG,WAAWC,IAAK5B,IACxB,qBAAK6B,UAAU,WAAf,SACE,sBAAKA,UAAU,eAAf,UACE,wBAAQC,QApBQ,WACtBzB,GAASD,GACTF,EAAWS,QAAQoB,aAkBb,SACI3B,EAAmB,QAAT,SAEd,uBACE4B,KAAK,QACLL,GAAG,SACHM,KAAK,SACLC,IAAI,OACJC,IAAI,IACJC,KAAK,OACLC,SAzBa,SAACC,GAAO,IAEvBC,GADaD,EAAXE,OACkBC,MAEtBF,IACFhC,EAAUgC,GACVrC,EAAWS,QAAQJ,UAAUgC,GAAa,KAoBpCG,aAAcpC,aC1CXqC,EA5BE,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBAEzC,OACE,sBAAKjB,UAAU,WAAf,UACE,0CACA,qBAAKA,UAAU,QAAf,SACGe,EAAOG,KAAI,SAACC,GAAD,OACV,sBAEEnB,UACEmB,EAAMrB,KAAOkB,EAAclB,GACvB,wBACA,gBAENG,QAAS,WACPgB,EAAiBE,IARrB,UAWE,+BAAOA,EAAMC,WACb,sCACA,+BAAOD,EAAME,UAZRF,EAAMrB,aCLjBiB,EAAS,CACb,CACEjB,GAAI,EACJsB,SAAU,YACVC,MAAO,eACPnD,IAAK,kFAEP,CACE4B,GAAI,EACJsB,SAAU,SACVC,MAAO,QACPnD,IAAI,kFAEN,CACE4B,GAAI,EACJsB,SAAU,0DACVC,MAAO,gBACPnD,IAAK,kFAEP,CACE4B,GAAI,EACJsB,SAAU,sBACVC,MAAO,4BACPnD,IAAK,mFAoBMoD,MAhBf,WAAgB,IAAD,EAE6BhD,mBAASyC,EAAO,IAF7C,mBAENC,EAFM,KAESC,EAFT,KAIb,OACE,sBAAKjB,UAAU,MAAf,UACE,cAAC,EAAD,CAAU9B,IAAK8C,EAAc9C,MAC7B,cAAC,EAAD,CACE6C,OAAQA,EACRC,cAAeA,EACfC,iBAAkBA,QC9BXM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.93986b23.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport WaveSurfer from \"wavesurfer.js\";\r\n\r\nconst formWaveSurferOptions = (ref) => ({\r\n  container: ref,\r\n  waveColor: \"#eee\",\r\n  progressColor: \"#8291A9\",\r\n  barWidth: 4,\r\n  barRadius: 1,\r\n  barGap: 2,\r\n  responsive: true,\r\n  height: 100,\r\n  normalize: true,\r\n  partialRender: true,\r\n  showTime: true,\r\n});\r\n\r\nconst Waveform = ({ url }) => {\r\n  const waveformRef = useRef(null);\r\n  const wavesurfer = useRef(null);\r\n  const [playing, setPlay] = useState(false);\r\n  const [volume, setVolume] = useState(0.5);\r\n\r\n  useEffect(() => {\r\n    setPlay(false);\r\n\r\n    const options = formWaveSurferOptions(waveformRef.current);\r\n    wavesurfer.current = WaveSurfer.create(options);\r\n\r\n    wavesurfer.current.load(url);\r\n\r\n    wavesurfer.current.on(\"ready\", function () {\r\n      if (wavesurfer.current) {\r\n        wavesurfer.current.setVolume(volume);\r\n        setVolume(volume);\r\n      }\r\n    });\r\n\r\n    return () => wavesurfer.current.destroy();\r\n  }, [url]);\r\n\r\n  const handlePlayPause = () => {\r\n    setPlay(!playing);\r\n    wavesurfer.current.playPause();\r\n  };\r\n\r\n  const onVolumeChange = (e) => {\r\n    const { target } = e;\r\n    const newVolume = +target.value;\r\n\r\n    if (newVolume) {\r\n      setVolume(newVolume);\r\n      wavesurfer.current.setVolume(newVolume || 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"waveform\" ref={waveformRef} />\r\n      <div className=\"controls\">\r\n        <div className=\"ControlsBody\">\r\n          <button onClick={handlePlayPause}>\r\n            {!playing ? \"Play\" : \"Pause\"}\r\n          </button>\r\n          <input\r\n            type=\"range\"\r\n            id=\"volume\"\r\n            name=\"volume\"\r\n            min=\"0.01\"\r\n            max=\"1\"\r\n            step=\".025\"\r\n            onChange={onVolumeChange}\r\n            defaultValue={volume}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Waveform;","import React from \"react\";\r\n\r\nconst PlayList = ({ tracks, selectedTrack, setSelectedTrack }) => {\r\n\r\n  return (\r\n    <div className=\"playlist\">\r\n      <p>Playlist:</p>\r\n      <div className=\"songs\">\r\n        {tracks.map((track) => (\r\n          <div\r\n            key={track.id}\r\n            className={\r\n              track.id === selectedTrack.id\r\n                ? \"playlist-itemSelected\"\r\n                : \"playlist-item\"\r\n            }\r\n            onClick={() => {\r\n              setSelectedTrack(track);\r\n            }}\r\n          >\r\n            <span>{track.misician}</span>\r\n            <span>- </span>\r\n            <span>{track.title}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayList;\r\n","import React, { useState } from \"react\";\nimport './App.css';\nimport Waveform from \"./Waveform\";\nimport PlayList from \"./Playlist\";\n\nconst tracks = [\n  {\n    id: 0,\n    misician: \"Kunteynir\",\n    title: \"Privet pider\",\n    url: 'https://res.cloudinary.com/qpheliax/video/upload/v1609094194/mp3/01_t040fc.mp3'\n  },\n  {\n    id: 1,\n    misician: \"MØL\",\n    title: \"Bruma\",\n    url:'https://res.cloudinary.com/qpheliax/video/upload/v1609094195/mp3/02_imf5hp.mp3'\n  },\n  {\n    id: 3,\n    misician: \"СЛАВА КПСС\",\n    title: \"TOYOTA CRESTA\",\n    url: 'https://res.cloudinary.com/qpheliax/video/upload/v1609094194/mp3/03_eccypd.mp3'\n    },\n  {\n    id: 4,\n    misician: \"Mourning By Morning\",\n    title: \"I Let You Go For Nihilism\",\n    url: 'https://res.cloudinary.com/qpheliax/video/upload/v1609094195/mp3/04_tafkbp.mp3'\n  }\n];\n\nfunction App() {\n\n  const [selectedTrack, setSelectedTrack] = useState(tracks[0]);\n\n  return (\n    <div className=\"App\">\n      <Waveform url={selectedTrack.url} />\n      <PlayList\n        tracks={tracks}\n        selectedTrack={selectedTrack}\n        setSelectedTrack={setSelectedTrack}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}